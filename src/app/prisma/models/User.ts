
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model User
 * 
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

export type UserMinAggregateOutputType = {
  id: string | null
  name: string | null
  username: string | null
  email: string | null
  avatar: string | null
  role: $Enums.USER_ROLE | null
  password: string | null
  isEmailVerified: boolean | null
  emailVerificationToken: string | null
  emailVerificationTokenExpiry: Date | null
  forgotPasswordToken: string | null
  forgotPasswordTokenExpiry: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type UserMaxAggregateOutputType = {
  id: string | null
  name: string | null
  username: string | null
  email: string | null
  avatar: string | null
  role: $Enums.USER_ROLE | null
  password: string | null
  isEmailVerified: boolean | null
  emailVerificationToken: string | null
  emailVerificationTokenExpiry: Date | null
  forgotPasswordToken: string | null
  forgotPasswordTokenExpiry: Date | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type UserCountAggregateOutputType = {
  id: number
  name: number
  username: number
  email: number
  avatar: number
  role: number
  password: number
  isEmailVerified: number
  emailVerificationToken: number
  emailVerificationTokenExpiry: number
  forgotPasswordToken: number
  forgotPasswordTokenExpiry: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type UserMinAggregateInputType = {
  id?: true
  name?: true
  username?: true
  email?: true
  avatar?: true
  role?: true
  password?: true
  isEmailVerified?: true
  emailVerificationToken?: true
  emailVerificationTokenExpiry?: true
  forgotPasswordToken?: true
  forgotPasswordTokenExpiry?: true
  createdAt?: true
  updatedAt?: true
}

export type UserMaxAggregateInputType = {
  id?: true
  name?: true
  username?: true
  email?: true
  avatar?: true
  role?: true
  password?: true
  isEmailVerified?: true
  emailVerificationToken?: true
  emailVerificationTokenExpiry?: true
  forgotPasswordToken?: true
  forgotPasswordTokenExpiry?: true
  createdAt?: true
  updatedAt?: true
}

export type UserCountAggregateInputType = {
  id?: true
  name?: true
  username?: true
  email?: true
  avatar?: true
  role?: true
  password?: true
  isEmailVerified?: true
  emailVerificationToken?: true
  emailVerificationTokenExpiry?: true
  forgotPasswordToken?: true
  forgotPasswordTokenExpiry?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type UserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Users
  **/
  _count?: true | UserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserMaxAggregateInputType
}

export type GetUserAggregateType<T extends UserAggregateArgs> = {
      [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>
}




export type UserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[]
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum
  having?: Prisma.UserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserCountAggregateInputType | true
  _min?: UserMinAggregateInputType
  _max?: UserMaxAggregateInputType
}

export type UserGroupByOutputType = {
  id: string
  name: string
  username: string
  email: string
  avatar: string | null
  role: $Enums.USER_ROLE
  password: string
  isEmailVerified: boolean
  emailVerificationToken: string | null
  emailVerificationTokenExpiry: Date | null
  forgotPasswordToken: string | null
  forgotPasswordTokenExpiry: Date | null
  createdAt: Date
  updatedAt: Date
  _count: UserCountAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
      }
    >
  > 



export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  id?: Prisma.StringFilter<"User"> | string
  name?: Prisma.StringFilter<"User"> | string
  username?: Prisma.StringFilter<"User"> | string
  email?: Prisma.StringFilter<"User"> | string
  avatar?: Prisma.StringNullableFilter<"User"> | string | null
  role?: Prisma.EnumUSER_ROLEFilter<"User"> | $Enums.USER_ROLE
  password?: Prisma.StringFilter<"User"> | string
  isEmailVerified?: Prisma.BoolFilter<"User"> | boolean
  emailVerificationToken?: Prisma.StringNullableFilter<"User"> | string | null
  emailVerificationTokenExpiry?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  forgotPasswordToken?: Prisma.StringNullableFilter<"User"> | string | null
  forgotPasswordTokenExpiry?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string
  problems?: Prisma.ProblemListRelationFilter
  submissions?: Prisma.SubmissionListRelationFilter
  problemsSolved?: Prisma.ProblemSolvedListRelationFilter
  playlists?: Prisma.PlaylistListRelationFilter
  dashboardStats?: Prisma.DashboardStatsListRelationFilter
  sessions?: Prisma.SessionListRelationFilter
  discussions?: Prisma.DiscussionListRelationFilter
  contests?: Prisma.ContestListRelationFilter
  contestParticipations?: Prisma.ContestParticipationListRelationFilter
}

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  role?: Prisma.SortOrder
  password?: Prisma.SortOrder
  isEmailVerified?: Prisma.SortOrder
  emailVerificationToken?: Prisma.SortOrderInput | Prisma.SortOrder
  emailVerificationTokenExpiry?: Prisma.SortOrderInput | Prisma.SortOrder
  forgotPasswordToken?: Prisma.SortOrderInput | Prisma.SortOrder
  forgotPasswordTokenExpiry?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  problems?: Prisma.ProblemOrderByRelationAggregateInput
  submissions?: Prisma.SubmissionOrderByRelationAggregateInput
  problemsSolved?: Prisma.ProblemSolvedOrderByRelationAggregateInput
  playlists?: Prisma.PlaylistOrderByRelationAggregateInput
  dashboardStats?: Prisma.DashboardStatsOrderByRelationAggregateInput
  sessions?: Prisma.SessionOrderByRelationAggregateInput
  discussions?: Prisma.DiscussionOrderByRelationAggregateInput
  contests?: Prisma.ContestOrderByRelationAggregateInput
  contestParticipations?: Prisma.ContestParticipationOrderByRelationAggregateInput
}

export type UserWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  username?: string
  email?: string
  emailVerificationToken?: string
  forgotPasswordToken?: string
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  name?: Prisma.StringFilter<"User"> | string
  avatar?: Prisma.StringNullableFilter<"User"> | string | null
  role?: Prisma.EnumUSER_ROLEFilter<"User"> | $Enums.USER_ROLE
  password?: Prisma.StringFilter<"User"> | string
  isEmailVerified?: Prisma.BoolFilter<"User"> | boolean
  emailVerificationTokenExpiry?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  forgotPasswordTokenExpiry?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string
  problems?: Prisma.ProblemListRelationFilter
  submissions?: Prisma.SubmissionListRelationFilter
  problemsSolved?: Prisma.ProblemSolvedListRelationFilter
  playlists?: Prisma.PlaylistListRelationFilter
  dashboardStats?: Prisma.DashboardStatsListRelationFilter
  sessions?: Prisma.SessionListRelationFilter
  discussions?: Prisma.DiscussionListRelationFilter
  contests?: Prisma.ContestListRelationFilter
  contestParticipations?: Prisma.ContestParticipationListRelationFilter
}, "id" | "username" | "email" | "emailVerificationToken" | "forgotPasswordToken">

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  role?: Prisma.SortOrder
  password?: Prisma.SortOrder
  isEmailVerified?: Prisma.SortOrder
  emailVerificationToken?: Prisma.SortOrderInput | Prisma.SortOrder
  emailVerificationTokenExpiry?: Prisma.SortOrderInput | Prisma.SortOrder
  forgotPasswordToken?: Prisma.SortOrderInput | Prisma.SortOrder
  forgotPasswordTokenExpiry?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.UserCountOrderByAggregateInput
  _max?: Prisma.UserMaxOrderByAggregateInput
  _min?: Prisma.UserMinOrderByAggregateInput
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"User"> | string
  name?: Prisma.StringWithAggregatesFilter<"User"> | string
  username?: Prisma.StringWithAggregatesFilter<"User"> | string
  email?: Prisma.StringWithAggregatesFilter<"User"> | string
  avatar?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  role?: Prisma.EnumUSER_ROLEWithAggregatesFilter<"User"> | $Enums.USER_ROLE
  password?: Prisma.StringWithAggregatesFilter<"User"> | string
  isEmailVerified?: Prisma.BoolWithAggregatesFilter<"User"> | boolean
  emailVerificationToken?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  emailVerificationTokenExpiry?: Prisma.DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  forgotPasswordToken?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  forgotPasswordTokenExpiry?: Prisma.DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
}

export type UserCreateInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemUncheckedCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionUncheckedCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistUncheckedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionUncheckedCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestUncheckedCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationUncheckedCreateNestedManyWithoutUserInput
}

export type UserUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUncheckedUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUncheckedUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUncheckedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUncheckedUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUncheckedUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateManyInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type UserUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  role?: Prisma.SortOrder
  password?: Prisma.SortOrder
  isEmailVerified?: Prisma.SortOrder
  emailVerificationToken?: Prisma.SortOrder
  emailVerificationTokenExpiry?: Prisma.SortOrder
  forgotPasswordToken?: Prisma.SortOrder
  forgotPasswordTokenExpiry?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  role?: Prisma.SortOrder
  password?: Prisma.SortOrder
  isEmailVerified?: Prisma.SortOrder
  emailVerificationToken?: Prisma.SortOrder
  emailVerificationTokenExpiry?: Prisma.SortOrder
  forgotPasswordToken?: Prisma.SortOrder
  forgotPasswordTokenExpiry?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  role?: Prisma.SortOrder
  password?: Prisma.SortOrder
  isEmailVerified?: Prisma.SortOrder
  emailVerificationToken?: Prisma.SortOrder
  emailVerificationTokenExpiry?: Prisma.SortOrder
  forgotPasswordToken?: Prisma.SortOrder
  forgotPasswordTokenExpiry?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput
  isNot?: Prisma.UserWhereInput
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type EnumUSER_ROLEFieldUpdateOperationsInput = {
  set?: $Enums.USER_ROLE
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type UserCreateNestedOneWithoutSessionsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSessionsInput, Prisma.UserUncheckedCreateWithoutSessionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSessionsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSessionsInput, Prisma.UserUncheckedCreateWithoutSessionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSessionsInput
  upsert?: Prisma.UserUpsertWithoutSessionsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutSessionsInput, Prisma.UserUpdateWithoutSessionsInput>, Prisma.UserUncheckedUpdateWithoutSessionsInput>
}

export type UserCreateNestedOneWithoutDashboardStatsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutDashboardStatsInput, Prisma.UserUncheckedCreateWithoutDashboardStatsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDashboardStatsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutDashboardStatsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutDashboardStatsInput, Prisma.UserUncheckedCreateWithoutDashboardStatsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDashboardStatsInput
  upsert?: Prisma.UserUpsertWithoutDashboardStatsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutDashboardStatsInput, Prisma.UserUpdateWithoutDashboardStatsInput>, Prisma.UserUncheckedUpdateWithoutDashboardStatsInput>
}

export type UserCreateNestedOneWithoutProblemsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProblemsInput, Prisma.UserUncheckedCreateWithoutProblemsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProblemsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutProblemsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProblemsInput, Prisma.UserUncheckedCreateWithoutProblemsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProblemsInput
  upsert?: Prisma.UserUpsertWithoutProblemsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutProblemsInput, Prisma.UserUpdateWithoutProblemsInput>, Prisma.UserUncheckedUpdateWithoutProblemsInput>
}

export type UserCreateNestedOneWithoutSubmissionsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSubmissionsInput, Prisma.UserUncheckedCreateWithoutSubmissionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubmissionsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutSubmissionsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSubmissionsInput, Prisma.UserUncheckedCreateWithoutSubmissionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubmissionsInput
  upsert?: Prisma.UserUpsertWithoutSubmissionsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutSubmissionsInput, Prisma.UserUpdateWithoutSubmissionsInput>, Prisma.UserUncheckedUpdateWithoutSubmissionsInput>
}

export type UserCreateNestedOneWithoutProblemsSolvedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProblemsSolvedInput, Prisma.UserUncheckedCreateWithoutProblemsSolvedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProblemsSolvedInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutProblemsSolvedNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProblemsSolvedInput, Prisma.UserUncheckedCreateWithoutProblemsSolvedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProblemsSolvedInput
  upsert?: Prisma.UserUpsertWithoutProblemsSolvedInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutProblemsSolvedInput, Prisma.UserUpdateWithoutProblemsSolvedInput>, Prisma.UserUncheckedUpdateWithoutProblemsSolvedInput>
}

export type UserCreateNestedOneWithoutPlaylistsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPlaylistsInput, Prisma.UserUncheckedCreateWithoutPlaylistsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPlaylistsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutPlaylistsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutPlaylistsInput, Prisma.UserUncheckedCreateWithoutPlaylistsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutPlaylistsInput
  upsert?: Prisma.UserUpsertWithoutPlaylistsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutPlaylistsInput, Prisma.UserUpdateWithoutPlaylistsInput>, Prisma.UserUncheckedUpdateWithoutPlaylistsInput>
}

export type UserCreateNestedOneWithoutDiscussionsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutDiscussionsInput, Prisma.UserUncheckedCreateWithoutDiscussionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDiscussionsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutDiscussionsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutDiscussionsInput, Prisma.UserUncheckedCreateWithoutDiscussionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDiscussionsInput
  upsert?: Prisma.UserUpsertWithoutDiscussionsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutDiscussionsInput, Prisma.UserUpdateWithoutDiscussionsInput>, Prisma.UserUncheckedUpdateWithoutDiscussionsInput>
}

export type UserCreateNestedOneWithoutContestsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutContestsInput, Prisma.UserUncheckedCreateWithoutContestsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutContestsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutContestsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutContestsInput, Prisma.UserUncheckedCreateWithoutContestsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutContestsInput
  upsert?: Prisma.UserUpsertWithoutContestsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutContestsInput, Prisma.UserUpdateWithoutContestsInput>, Prisma.UserUncheckedUpdateWithoutContestsInput>
}

export type UserCreateNestedOneWithoutContestParticipationsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutContestParticipationsInput, Prisma.UserUncheckedCreateWithoutContestParticipationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutContestParticipationsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutContestParticipationsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutContestParticipationsInput, Prisma.UserUncheckedCreateWithoutContestParticipationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutContestParticipationsInput
  upsert?: Prisma.UserUpsertWithoutContestParticipationsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutContestParticipationsInput, Prisma.UserUpdateWithoutContestParticipationsInput>, Prisma.UserUncheckedUpdateWithoutContestParticipationsInput>
}

export type UserCreateWithoutSessionsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutSessionsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemUncheckedCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionUncheckedCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistUncheckedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsUncheckedCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionUncheckedCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestUncheckedCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutSessionsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutSessionsInput, Prisma.UserUncheckedCreateWithoutSessionsInput>
}

export type UserUpsertWithoutSessionsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutSessionsInput, Prisma.UserUncheckedUpdateWithoutSessionsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutSessionsInput, Prisma.UserUncheckedCreateWithoutSessionsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutSessionsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutSessionsInput, Prisma.UserUncheckedUpdateWithoutSessionsInput>
}

export type UserUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUncheckedUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUncheckedUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUncheckedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUncheckedUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUncheckedUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUncheckedUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutDashboardStatsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutDashboardStatsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemUncheckedCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionUncheckedCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionUncheckedCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestUncheckedCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutDashboardStatsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutDashboardStatsInput, Prisma.UserUncheckedCreateWithoutDashboardStatsInput>
}

export type UserUpsertWithoutDashboardStatsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutDashboardStatsInput, Prisma.UserUncheckedUpdateWithoutDashboardStatsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutDashboardStatsInput, Prisma.UserUncheckedCreateWithoutDashboardStatsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutDashboardStatsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutDashboardStatsInput, Prisma.UserUncheckedUpdateWithoutDashboardStatsInput>
}

export type UserUpdateWithoutDashboardStatsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutDashboardStatsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUncheckedUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUncheckedUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUncheckedUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUncheckedUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutProblemsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  submissions?: Prisma.SubmissionCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutProblemsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  submissions?: Prisma.SubmissionUncheckedCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistUncheckedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionUncheckedCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestUncheckedCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutProblemsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutProblemsInput, Prisma.UserUncheckedCreateWithoutProblemsInput>
}

export type UserUpsertWithoutProblemsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutProblemsInput, Prisma.UserUncheckedUpdateWithoutProblemsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutProblemsInput, Prisma.UserUncheckedCreateWithoutProblemsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutProblemsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutProblemsInput, Prisma.UserUncheckedUpdateWithoutProblemsInput>
}

export type UserUpdateWithoutProblemsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissions?: Prisma.SubmissionUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutProblemsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  submissions?: Prisma.SubmissionUncheckedUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUncheckedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUncheckedUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUncheckedUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutSubmissionsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutSubmissionsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemUncheckedCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistUncheckedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionUncheckedCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestUncheckedCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutSubmissionsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutSubmissionsInput, Prisma.UserUncheckedCreateWithoutSubmissionsInput>
}

export type UserUpsertWithoutSubmissionsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutSubmissionsInput, Prisma.UserUncheckedUpdateWithoutSubmissionsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutSubmissionsInput, Prisma.UserUncheckedCreateWithoutSubmissionsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutSubmissionsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutSubmissionsInput, Prisma.UserUncheckedUpdateWithoutSubmissionsInput>
}

export type UserUpdateWithoutSubmissionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutSubmissionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUncheckedUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUncheckedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUncheckedUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUncheckedUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutProblemsSolvedInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutProblemsSolvedInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemUncheckedCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionUncheckedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistUncheckedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionUncheckedCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestUncheckedCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutProblemsSolvedInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutProblemsSolvedInput, Prisma.UserUncheckedCreateWithoutProblemsSolvedInput>
}

export type UserUpsertWithoutProblemsSolvedInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutProblemsSolvedInput, Prisma.UserUncheckedUpdateWithoutProblemsSolvedInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutProblemsSolvedInput, Prisma.UserUncheckedCreateWithoutProblemsSolvedInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutProblemsSolvedInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutProblemsSolvedInput, Prisma.UserUncheckedUpdateWithoutProblemsSolvedInput>
}

export type UserUpdateWithoutProblemsSolvedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutProblemsSolvedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUncheckedUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUncheckedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUncheckedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUncheckedUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUncheckedUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutPlaylistsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutPlaylistsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemUncheckedCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionUncheckedCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionUncheckedCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestUncheckedCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutPlaylistsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutPlaylistsInput, Prisma.UserUncheckedCreateWithoutPlaylistsInput>
}

export type UserUpsertWithoutPlaylistsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutPlaylistsInput, Prisma.UserUncheckedUpdateWithoutPlaylistsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutPlaylistsInput, Prisma.UserUncheckedCreateWithoutPlaylistsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutPlaylistsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutPlaylistsInput, Prisma.UserUncheckedUpdateWithoutPlaylistsInput>
}

export type UserUpdateWithoutPlaylistsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutPlaylistsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUncheckedUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUncheckedUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUncheckedUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUncheckedUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutDiscussionsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutDiscussionsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemUncheckedCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionUncheckedCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistUncheckedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestUncheckedCreateNestedManyWithoutCreatorInput
  contestParticipations?: Prisma.ContestParticipationUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutDiscussionsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutDiscussionsInput, Prisma.UserUncheckedCreateWithoutDiscussionsInput>
}

export type UserUpsertWithoutDiscussionsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutDiscussionsInput, Prisma.UserUncheckedUpdateWithoutDiscussionsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutDiscussionsInput, Prisma.UserUncheckedCreateWithoutDiscussionsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutDiscussionsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutDiscussionsInput, Prisma.UserUncheckedUpdateWithoutDiscussionsInput>
}

export type UserUpdateWithoutDiscussionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutDiscussionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUncheckedUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUncheckedUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUncheckedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUncheckedUpdateManyWithoutCreatorNestedInput
  contestParticipations?: Prisma.ContestParticipationUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutContestsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionCreateNestedManyWithoutUserInput
  contestParticipations?: Prisma.ContestParticipationCreateNestedManyWithoutUserInput
}

export type UserUncheckedCreateWithoutContestsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemUncheckedCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionUncheckedCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistUncheckedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionUncheckedCreateNestedManyWithoutUserInput
  contestParticipations?: Prisma.ContestParticipationUncheckedCreateNestedManyWithoutUserInput
}

export type UserCreateOrConnectWithoutContestsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutContestsInput, Prisma.UserUncheckedCreateWithoutContestsInput>
}

export type UserUpsertWithoutContestsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutContestsInput, Prisma.UserUncheckedUpdateWithoutContestsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutContestsInput, Prisma.UserUncheckedCreateWithoutContestsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutContestsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutContestsInput, Prisma.UserUncheckedUpdateWithoutContestsInput>
}

export type UserUpdateWithoutContestsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUpdateManyWithoutUserNestedInput
  contestParticipations?: Prisma.ContestParticipationUpdateManyWithoutUserNestedInput
}

export type UserUncheckedUpdateWithoutContestsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUncheckedUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUncheckedUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUncheckedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUncheckedUpdateManyWithoutUserNestedInput
  contestParticipations?: Prisma.ContestParticipationUncheckedUpdateManyWithoutUserNestedInput
}

export type UserCreateWithoutContestParticipationsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestCreateNestedManyWithoutCreatorInput
}

export type UserUncheckedCreateWithoutContestParticipationsInput = {
  id?: string
  name: string
  username: string
  email: string
  avatar?: string | null
  role?: $Enums.USER_ROLE
  password: string
  isEmailVerified?: boolean
  emailVerificationToken?: string | null
  emailVerificationTokenExpiry?: Date | string | null
  forgotPasswordToken?: string | null
  forgotPasswordTokenExpiry?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  problems?: Prisma.ProblemUncheckedCreateNestedManyWithoutUserInput
  submissions?: Prisma.SubmissionUncheckedCreateNestedManyWithoutUserInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedCreateNestedManyWithoutUserInput
  playlists?: Prisma.PlaylistUncheckedCreateNestedManyWithoutUserInput
  dashboardStats?: Prisma.DashboardStatsUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  discussions?: Prisma.DiscussionUncheckedCreateNestedManyWithoutUserInput
  contests?: Prisma.ContestUncheckedCreateNestedManyWithoutCreatorInput
}

export type UserCreateOrConnectWithoutContestParticipationsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutContestParticipationsInput, Prisma.UserUncheckedCreateWithoutContestParticipationsInput>
}

export type UserUpsertWithoutContestParticipationsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutContestParticipationsInput, Prisma.UserUncheckedUpdateWithoutContestParticipationsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutContestParticipationsInput, Prisma.UserUncheckedCreateWithoutContestParticipationsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutContestParticipationsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutContestParticipationsInput, Prisma.UserUncheckedUpdateWithoutContestParticipationsInput>
}

export type UserUpdateWithoutContestParticipationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUpdateManyWithoutCreatorNestedInput
}

export type UserUncheckedUpdateWithoutContestParticipationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumUSER_ROLEFieldUpdateOperationsInput | $Enums.USER_ROLE
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isEmailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  emailVerificationToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  emailVerificationTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  forgotPasswordToken?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  forgotPasswordTokenExpiry?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  problems?: Prisma.ProblemUncheckedUpdateManyWithoutUserNestedInput
  submissions?: Prisma.SubmissionUncheckedUpdateManyWithoutUserNestedInput
  problemsSolved?: Prisma.ProblemSolvedUncheckedUpdateManyWithoutUserNestedInput
  playlists?: Prisma.PlaylistUncheckedUpdateManyWithoutUserNestedInput
  dashboardStats?: Prisma.DashboardStatsUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  discussions?: Prisma.DiscussionUncheckedUpdateManyWithoutUserNestedInput
  contests?: Prisma.ContestUncheckedUpdateManyWithoutCreatorNestedInput
}


/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  problems: number
  submissions: number
  problemsSolved: number
  playlists: number
  dashboardStats: number
  sessions: number
  discussions: number
  contests: number
  contestParticipations: number
}

export type UserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  problems?: boolean | UserCountOutputTypeCountProblemsArgs
  submissions?: boolean | UserCountOutputTypeCountSubmissionsArgs
  problemsSolved?: boolean | UserCountOutputTypeCountProblemsSolvedArgs
  playlists?: boolean | UserCountOutputTypeCountPlaylistsArgs
  dashboardStats?: boolean | UserCountOutputTypeCountDashboardStatsArgs
  sessions?: boolean | UserCountOutputTypeCountSessionsArgs
  discussions?: boolean | UserCountOutputTypeCountDiscussionsArgs
  contests?: boolean | UserCountOutputTypeCountContestsArgs
  contestParticipations?: boolean | UserCountOutputTypeCountContestParticipationsArgs
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountProblemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProblemWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSubmissionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SubmissionWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountProblemsSolvedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProblemSolvedWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountPlaylistsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PlaylistWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountDashboardStatsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DashboardStatsWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SessionWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountDiscussionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DiscussionWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountContestsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ContestWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountContestParticipationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ContestParticipationWhereInput
}


export type UserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  username?: boolean
  email?: boolean
  avatar?: boolean
  role?: boolean
  password?: boolean
  isEmailVerified?: boolean
  emailVerificationToken?: boolean
  emailVerificationTokenExpiry?: boolean
  forgotPasswordToken?: boolean
  forgotPasswordTokenExpiry?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  problems?: boolean | Prisma.User$problemsArgs<ExtArgs>
  submissions?: boolean | Prisma.User$submissionsArgs<ExtArgs>
  problemsSolved?: boolean | Prisma.User$problemsSolvedArgs<ExtArgs>
  playlists?: boolean | Prisma.User$playlistsArgs<ExtArgs>
  dashboardStats?: boolean | Prisma.User$dashboardStatsArgs<ExtArgs>
  sessions?: boolean | Prisma.User$sessionsArgs<ExtArgs>
  discussions?: boolean | Prisma.User$discussionsArgs<ExtArgs>
  contests?: boolean | Prisma.User$contestsArgs<ExtArgs>
  contestParticipations?: boolean | Prisma.User$contestParticipationsArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user"]>

export type UserSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  username?: boolean
  email?: boolean
  avatar?: boolean
  role?: boolean
  password?: boolean
  isEmailVerified?: boolean
  emailVerificationToken?: boolean
  emailVerificationTokenExpiry?: boolean
  forgotPasswordToken?: boolean
  forgotPasswordTokenExpiry?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  username?: boolean
  email?: boolean
  avatar?: boolean
  role?: boolean
  password?: boolean
  isEmailVerified?: boolean
  emailVerificationToken?: boolean
  emailVerificationTokenExpiry?: boolean
  forgotPasswordToken?: boolean
  forgotPasswordTokenExpiry?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectScalar = {
  id?: boolean
  name?: boolean
  username?: boolean
  email?: boolean
  avatar?: boolean
  role?: boolean
  password?: boolean
  isEmailVerified?: boolean
  emailVerificationToken?: boolean
  emailVerificationTokenExpiry?: boolean
  forgotPasswordToken?: boolean
  forgotPasswordTokenExpiry?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type UserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "username" | "email" | "avatar" | "role" | "password" | "isEmailVerified" | "emailVerificationToken" | "emailVerificationTokenExpiry" | "forgotPasswordToken" | "forgotPasswordTokenExpiry" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
export type UserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  problems?: boolean | Prisma.User$problemsArgs<ExtArgs>
  submissions?: boolean | Prisma.User$submissionsArgs<ExtArgs>
  problemsSolved?: boolean | Prisma.User$problemsSolvedArgs<ExtArgs>
  playlists?: boolean | Prisma.User$playlistsArgs<ExtArgs>
  dashboardStats?: boolean | Prisma.User$dashboardStatsArgs<ExtArgs>
  sessions?: boolean | Prisma.User$sessionsArgs<ExtArgs>
  discussions?: boolean | Prisma.User$discussionsArgs<ExtArgs>
  contests?: boolean | Prisma.User$contestsArgs<ExtArgs>
  contestParticipations?: boolean | Prisma.User$contestParticipationsArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}
export type UserIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type UserIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $UserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "User"
  objects: {
    problems: Prisma.$ProblemPayload<ExtArgs>[]
    submissions: Prisma.$SubmissionPayload<ExtArgs>[]
    problemsSolved: Prisma.$ProblemSolvedPayload<ExtArgs>[]
    playlists: Prisma.$PlaylistPayload<ExtArgs>[]
    dashboardStats: Prisma.$DashboardStatsPayload<ExtArgs>[]
    sessions: Prisma.$SessionPayload<ExtArgs>[]
    discussions: Prisma.$DiscussionPayload<ExtArgs>[]
    contests: Prisma.$ContestPayload<ExtArgs>[]
    contestParticipations: Prisma.$ContestParticipationPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    username: string
    email: string
    avatar: string | null
    role: $Enums.USER_ROLE
    password: string
    isEmailVerified: boolean
    emailVerificationToken: string | null
    emailVerificationTokenExpiry: Date | null
    forgotPasswordToken: string | null
    forgotPasswordTokenExpiry: Date | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["user"]>
  composites: {}
}

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>

export type UserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UserCountAggregateInputType | true
  }

export interface UserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   * 
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserFindManyArgs>(args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   * 
   */
  create<T extends UserCreateArgs>(args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserCreateManyArgs>(args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   * 
   */
  delete<T extends UserDeleteArgs>(args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserUpdateArgs>(args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserUpdateManyArgs>(args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
  **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserAggregateArgs>(args: Prisma.Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the User model
 */
readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  problems<T extends Prisma.User$problemsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$problemsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProblemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  submissions<T extends Prisma.User$submissionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$submissionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  problemsSolved<T extends Prisma.User$problemsSolvedArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$problemsSolvedArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProblemSolvedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  playlists<T extends Prisma.User$playlistsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$playlistsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlaylistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  dashboardStats<T extends Prisma.User$dashboardStatsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$dashboardStatsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DashboardStatsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  sessions<T extends Prisma.User$sessionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  discussions<T extends Prisma.User$discussionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$discussionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DiscussionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  contests<T extends Prisma.User$contestsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$contestsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ContestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  contestParticipations<T extends Prisma.User$contestParticipationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$contestParticipationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ContestParticipationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", 'String'>
  readonly name: Prisma.FieldRef<"User", 'String'>
  readonly username: Prisma.FieldRef<"User", 'String'>
  readonly email: Prisma.FieldRef<"User", 'String'>
  readonly avatar: Prisma.FieldRef<"User", 'String'>
  readonly role: Prisma.FieldRef<"User", 'USER_ROLE'>
  readonly password: Prisma.FieldRef<"User", 'String'>
  readonly isEmailVerified: Prisma.FieldRef<"User", 'Boolean'>
  readonly emailVerificationToken: Prisma.FieldRef<"User", 'String'>
  readonly emailVerificationTokenExpiry: Prisma.FieldRef<"User", 'DateTime'>
  readonly forgotPasswordToken: Prisma.FieldRef<"User", 'String'>
  readonly forgotPasswordTokenExpiry: Prisma.FieldRef<"User", 'DateTime'>
  readonly createdAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"User", 'DateTime'>
}
    

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findFirst
 */
export type UserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findMany
 */
export type UserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User create
 */
export type UserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
}

/**
 * User createMany
 */
export type UserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User update
 */
export type UserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User updateMany
 */
export type UserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User upsert
 */
export type UserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
}

/**
 * User delete
 */
export type UserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to delete.
   */
  limit?: number
}

/**
 * User.problems
 */
export type User$problemsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Problem
   */
  select?: Prisma.ProblemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Problem
   */
  omit?: Prisma.ProblemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProblemInclude<ExtArgs> | null
  where?: Prisma.ProblemWhereInput
  orderBy?: Prisma.ProblemOrderByWithRelationInput | Prisma.ProblemOrderByWithRelationInput[]
  cursor?: Prisma.ProblemWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProblemScalarFieldEnum | Prisma.ProblemScalarFieldEnum[]
}

/**
 * User.submissions
 */
export type User$submissionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Submission
   */
  select?: Prisma.SubmissionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Submission
   */
  omit?: Prisma.SubmissionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SubmissionInclude<ExtArgs> | null
  where?: Prisma.SubmissionWhereInput
  orderBy?: Prisma.SubmissionOrderByWithRelationInput | Prisma.SubmissionOrderByWithRelationInput[]
  cursor?: Prisma.SubmissionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SubmissionScalarFieldEnum | Prisma.SubmissionScalarFieldEnum[]
}

/**
 * User.problemsSolved
 */
export type User$problemsSolvedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProblemSolved
   */
  select?: Prisma.ProblemSolvedSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProblemSolved
   */
  omit?: Prisma.ProblemSolvedOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProblemSolvedInclude<ExtArgs> | null
  where?: Prisma.ProblemSolvedWhereInput
  orderBy?: Prisma.ProblemSolvedOrderByWithRelationInput | Prisma.ProblemSolvedOrderByWithRelationInput[]
  cursor?: Prisma.ProblemSolvedWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProblemSolvedScalarFieldEnum | Prisma.ProblemSolvedScalarFieldEnum[]
}

/**
 * User.playlists
 */
export type User$playlistsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Playlist
   */
  select?: Prisma.PlaylistSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Playlist
   */
  omit?: Prisma.PlaylistOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlaylistInclude<ExtArgs> | null
  where?: Prisma.PlaylistWhereInput
  orderBy?: Prisma.PlaylistOrderByWithRelationInput | Prisma.PlaylistOrderByWithRelationInput[]
  cursor?: Prisma.PlaylistWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PlaylistScalarFieldEnum | Prisma.PlaylistScalarFieldEnum[]
}

/**
 * User.dashboardStats
 */
export type User$dashboardStatsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DashboardStats
   */
  select?: Prisma.DashboardStatsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the DashboardStats
   */
  omit?: Prisma.DashboardStatsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DashboardStatsInclude<ExtArgs> | null
  where?: Prisma.DashboardStatsWhereInput
  orderBy?: Prisma.DashboardStatsOrderByWithRelationInput | Prisma.DashboardStatsOrderByWithRelationInput[]
  cursor?: Prisma.DashboardStatsWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.DashboardStatsScalarFieldEnum | Prisma.DashboardStatsScalarFieldEnum[]
}

/**
 * User.sessions
 */
export type User$sessionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Session
   */
  select?: Prisma.SessionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Session
   */
  omit?: Prisma.SessionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionInclude<ExtArgs> | null
  where?: Prisma.SessionWhereInput
  orderBy?: Prisma.SessionOrderByWithRelationInput | Prisma.SessionOrderByWithRelationInput[]
  cursor?: Prisma.SessionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SessionScalarFieldEnum | Prisma.SessionScalarFieldEnum[]
}

/**
 * User.discussions
 */
export type User$discussionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Discussion
   */
  select?: Prisma.DiscussionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Discussion
   */
  omit?: Prisma.DiscussionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DiscussionInclude<ExtArgs> | null
  where?: Prisma.DiscussionWhereInput
  orderBy?: Prisma.DiscussionOrderByWithRelationInput | Prisma.DiscussionOrderByWithRelationInput[]
  cursor?: Prisma.DiscussionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.DiscussionScalarFieldEnum | Prisma.DiscussionScalarFieldEnum[]
}

/**
 * User.contests
 */
export type User$contestsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Contest
   */
  select?: Prisma.ContestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Contest
   */
  omit?: Prisma.ContestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ContestInclude<ExtArgs> | null
  where?: Prisma.ContestWhereInput
  orderBy?: Prisma.ContestOrderByWithRelationInput | Prisma.ContestOrderByWithRelationInput[]
  cursor?: Prisma.ContestWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ContestScalarFieldEnum | Prisma.ContestScalarFieldEnum[]
}

/**
 * User.contestParticipations
 */
export type User$contestParticipationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ContestParticipation
   */
  select?: Prisma.ContestParticipationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ContestParticipation
   */
  omit?: Prisma.ContestParticipationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ContestParticipationInclude<ExtArgs> | null
  where?: Prisma.ContestParticipationWhereInput
  orderBy?: Prisma.ContestParticipationOrderByWithRelationInput | Prisma.ContestParticipationOrderByWithRelationInput[]
  cursor?: Prisma.ContestParticipationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ContestParticipationScalarFieldEnum | Prisma.ContestParticipationScalarFieldEnum[]
}

/**
 * User without action
 */
export type UserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
}
