
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions, Log = $Class.LogOptions<ClientOptions>, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-3.0.x.so.node")
path.join(process.cwd(), "src/app/prisma/libquery_engine-debian-openssl-3.0.x.so.node")

/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model Session
 * 
 */
export type Session = Prisma.SessionModel
/**
 * Model DashboardStats
 * 
 */
export type DashboardStats = Prisma.DashboardStatsModel
/**
 * Model Problem
 * 
 */
export type Problem = Prisma.ProblemModel
/**
 * Model Submission
 * 
 */
export type Submission = Prisma.SubmissionModel
/**
 * Model TestCaseResult
 * 
 */
export type TestCaseResult = Prisma.TestCaseResultModel
/**
 * Model ProblemSolved
 * 
 */
export type ProblemSolved = Prisma.ProblemSolvedModel
/**
 * Model Playlist
 * 
 */
export type Playlist = Prisma.PlaylistModel
/**
 * Model ProblemInPlaylist
 * 
 */
export type ProblemInPlaylist = Prisma.ProblemInPlaylistModel
/**
 * Model Discussion
 * 
 */
export type Discussion = Prisma.DiscussionModel
/**
 * Model Contest
 * 
 */
export type Contest = Prisma.ContestModel
/**
 * Model ContestProblem
 * 
 */
export type ContestProblem = Prisma.ContestProblemModel
/**
 * Model ContestParticipation
 * 
 */
export type ContestParticipation = Prisma.ContestParticipationModel

export type USER_ROLE = $Enums.USER_ROLE
export const USER_ROLE = $Enums.USER_ROLE

export type DIFFICULTY = $Enums.DIFFICULTY
export const DIFFICULTY = $Enums.DIFFICULTY

export type LANGUAGE = $Enums.LANGUAGE
export const LANGUAGE = $Enums.LANGUAGE
